name:                lagrangian
version:             0.6.0.1
synopsis:            Solve Lagrange multiplier problems
description:
 Numerically solve convex Lagrange multiplier problems with conjugate gradient descent.
 .
 For some background on the method of Lagrange multipliers checkout the wikipedia page
 <http://en.wikipedia.org/wiki/Lagrange_multiplier>
 .
 Here is an example from the Wikipedia page on Lagrange multipliers
 Maximize f(x, y) = x + y, subject to the constraint x^2 + y^2 = 1
 .
 @
   \> maximize 0.00001 (\\[x, y] -> x + y) [(\\[x, y] -> x^2 + y^2) \<=\> 1] 2
   Right ([0.707,0.707], [-0.707])
 @
 .
 For more information look here: <http://en.wikipedia.org/wiki/Lagrange_multiplier#Example_1>
 .
 For example, to find the maximum entropy with the constraint that the probabilities sum
 to one.
 .
 @
   \> maximize 0.00001 (negate . sum . map (\\x -> x * log x)) [sum \<=\> 1] 3
   Right ([0.33, 0.33, 0.33], [-0.09])
 @
 .
 The first elements of the result pair are the arguments for the
 objective function at the maximum. The second elements are the Lagrange multipliers.
 .
homepage:            http://github.com/jfischoff/lagrangian
license:             BSD3
license-file:        LICENSE
author:              (c) Jonathan Fischoff 2012-2014, (c) Eric Pashman 2014  
maintainer:          jonathangfischoff@gmail.com
-- copyright:
category:            Math
build-type:          Simple
cabal-version:       >=1.8

library
  exposed-modules: Numeric.AD.Lagrangian
  other-modules: Numeric.AD.Lagrangian.Internal
  ghc-options:          -Wall
  build-depends:    base >=4.7 && < 5,
                    nonlinear-optimization,
                    vector ==0.12.*,
                    ad >= 4 && < 5,
                    hmatrix >= 0.19 && < 0.20
  hs-source-dirs:      src

Test-Suite tests
  ghc-options:    -Wall
  Hs-Source-Dirs: src, tests
  type:       exitcode-stdio-1.0
  main-is:    Main.hs
  other-modules: Numeric.AD.Lagrangian.Internal
  build-depends: base >=4.7 && < 5,
                 tasty,
                 tasty-hunit,
                 tasty-quickcheck,
                 vector ==0.12.*,
                 hmatrix >= 0.19 && < 0.20,
                 ad >= 4 && < 5,
                 nonlinear-optimization,
                 lagrangian

